// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: message.proto

package internal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Quote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticker        string                 `protobuf:"bytes,1,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Px            float64                `protobuf:"fixed64,2,opt,name=px,proto3" json:"px,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Quote) Reset() {
	*x = Quote{}
	mi := &file_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quote.ProtoReflect.Descriptor instead.
func (*Quote) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *Quote) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *Quote) GetPx() float64 {
	if x != nil {
		return x.Px
	}
	return 0
}

type QuoteSubscriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticker        string                 `protobuf:"bytes,1,opt,name=ticker,proto3" json:"ticker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuoteSubscriptionRequest) Reset() {
	*x = QuoteSubscriptionRequest{}
	mi := &file_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteSubscriptionRequest) ProtoMessage() {}

func (x *QuoteSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*QuoteSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *QuoteSubscriptionRequest) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

type QuoteSubscriptionsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QuoteSubscriptionsResponse) Reset() {
	*x = QuoteSubscriptionsResponse{}
	mi := &file_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteSubscriptionsResponse) ProtoMessage() {}

func (x *QuoteSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*QuoteSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *QuoteSubscriptionsResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type QuoteUnsubscriptionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Ticker         string                 `protobuf:"bytes,1,opt,name=ticker,proto3" json:"ticker,omitempty"`
	SubscriptionId string                 `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QuoteUnsubscriptionRequest) Reset() {
	*x = QuoteUnsubscriptionRequest{}
	mi := &file_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteUnsubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteUnsubscriptionRequest) ProtoMessage() {}

func (x *QuoteUnsubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteUnsubscriptionRequest.ProtoReflect.Descriptor instead.
func (*QuoteUnsubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *QuoteUnsubscriptionRequest) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *QuoteUnsubscriptionRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type QuoteUnsubscriptionsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QuoteUnsubscriptionsResponse) Reset() {
	*x = QuoteUnsubscriptionsResponse{}
	mi := &file_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteUnsubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteUnsubscriptionsResponse) ProtoMessage() {}

func (x *QuoteUnsubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteUnsubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*QuoteUnsubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *QuoteUnsubscriptionsResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

var File_message_proto protoreflect.FileDescriptor

const file_message_proto_rawDesc = "" +
	"\n" +
	"\rmessage.proto\x12\binternal\"/\n" +
	"\x05Quote\x12\x16\n" +
	"\x06ticker\x18\x01 \x01(\tR\x06ticker\x12\x0e\n" +
	"\x02px\x18\x02 \x01(\x01R\x02px\"2\n" +
	"\x18QuoteSubscriptionRequest\x12\x16\n" +
	"\x06ticker\x18\x01 \x01(\tR\x06ticker\"E\n" +
	"\x1aQuoteSubscriptionsResponse\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\"]\n" +
	"\x1aQuoteUnsubscriptionRequest\x12\x16\n" +
	"\x06ticker\x18\x01 \x01(\tR\x06ticker\x12'\n" +
	"\x0fsubscription_id\x18\x02 \x01(\tR\x0esubscriptionId\"G\n" +
	"\x1cQuoteUnsubscriptionsResponse\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionIdB4Z2github.com/BrunoCupertino/stock-hollywood/internalb\x06proto3"

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData []byte
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_proto_rawDesc), len(file_message_proto_rawDesc)))
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_message_proto_goTypes = []any{
	(*Quote)(nil),                        // 0: internal.Quote
	(*QuoteSubscriptionRequest)(nil),     // 1: internal.QuoteSubscriptionRequest
	(*QuoteSubscriptionsResponse)(nil),   // 2: internal.QuoteSubscriptionsResponse
	(*QuoteUnsubscriptionRequest)(nil),   // 3: internal.QuoteUnsubscriptionRequest
	(*QuoteUnsubscriptionsResponse)(nil), // 4: internal.QuoteUnsubscriptionsResponse
}
var file_message_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_proto_rawDesc), len(file_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
